snippet main
	public static void main (String []args)
	{
		${1:/* code */}
	}
snippet pu
	public
snippet po
	protected
snippet pr
	private
snippet st
	static
snippet fi
	final
snippet ab
	abstract
snippet re
	return
snippet br
	break;
snippet de
	default:
		${1}
snippet ca
	catch(${1:Exception} ${2:e}) ${3}
snippet th
	throw 
snippet sy
	synchronized
snippet im
	import
snippet j.u
	java.util
snippet j.i
	java.io.
snippet j.b
	java.beans.
snippet j.n
	java.net.
snippet j.m
	java.math.
snippet if
	if (${1:/*condition*/}){
		${2://cod3a}
	}
snippet el
	else{ ${1://cod3a}} 
snippet elif
	else if (${1:/*condition*/}){
				 ${2://cod3a}
	}
snippet wh
	while (${1:/*condition*/}){
			${2}
	}
snippet for
	for (int ${1:i}; $1 < ${2:cant}; $1++){
		${3}
	}
snippet fore
	for (${1:var}:${2:lista}){
			${3://cod3a}
	}
snippet sw
	switch (${1:variable}){
		case '${2:valor}':
						  ${5:// cod3a}
						  break;
		case '${3:valor}':
						  ${6:// cod3a}
						  break;
		case '${4:valor}':
						  ${7:// cod3a}
						  break;
		default:
						  ${8:// cod3a}
snippet cs
	case ${1}:
		${2}
	${3}
snippet tc
	public class ${1:`Filename()`} extends ${2:TestCase}
snippet t
	public void test${1:Name}() throws Exception ${2}
snippet cl
	class ${1:`Filename("", "untitled")`} ${2}
snippet in
	interface ${1:`Filename("", "untitled")`} ${2:extends Parent}${3}
snippet m
	${1:void} ${2:method}(${3}) ${4:throws }${5}
snippet v
	${1:String} ${2:var}${3: = null}${4};${5}
snippet co
	static public final ${1:String} ${2:var} = ${3};${4}
snippet cos
	static public final String ${1:var} = "${2}";${3}
snippet as
	assert ${1:test} : "${2:Failure message}";${3}
snippet prs
	private String ${1:nombre};
	${2}
snippet pri
	private int ${1:edad};
	${2}
snippet ps
	public String ${1:nombre};
	${2}
snippet pi
	public int ${1:edad};
	${2}
snippet pvm
	public void  ${1:method}(${2:/*parameters*/});
	${3}
snippet pim
	public int  ${1:method}(${2:/*parameters*/});
	${3}
snippet psm
	public String  ${1:method}(${2:/*parameters*/});
	${3}
